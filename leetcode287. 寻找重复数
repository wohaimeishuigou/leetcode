287. 寻找重复数
给定一个包含 n + 1 个整数的数组 nums ，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。

假设 nums 只有 一个重复的整数 ，找出 这个重复的数 。

你设计的解决方案必须不修改数组 nums 且只用常量级 O(1) 的额外空间。


class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        slow=0
        fast=0
        while True:
           fast=nums[nums[fast]]###妙啊！在数组使用快慢指针，寻找一个环，也就是前面和后面重复相等的这两个数组成的
           slow=nums[slow]
           if (fast==slow):
              break
            ###找到环之后，再来一个指针finder，从头开始走，slow继续走一个环，再次相遇时便是环的入口
        finder=0
        while True:
           finder=nums[finder]
           slow=nums[slow]
           if (finder==slow):
              break
        return slow
