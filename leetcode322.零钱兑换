322.零钱兑换
给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。

计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。

你可以认为每种硬币的数量是无限的。

dp[i]代表amount为i是为了凑成总金额所需要的最少的硬币个数

class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        dp=[float('inf)]*(amount+1)
        dp[0]=0
        for coin in coins:
            for i in range(coin,amount+1):
                 dp[i]=min(dp[i],dp[i-coin]+1)
        return dp[amount+1] if dp[amount+1]!=float('inf) else -1##如果dp[amount+1]没有被替换还和之前一样，说明没有组成总金额的组合，染回-1
        