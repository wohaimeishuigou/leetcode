64.最小路径和
给定一个包含非负整数的 m x n 网格 grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。

说明：每次只能向下或者向右移动一步。

class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        rows,cols=len(grid),len(grid[0])
        dp=[[0]*cols for _ in range(rows)]###创建矩阵dp，原矩阵中就有数字，所以直接0就可以
        dp[0][0]=grid[0][0] ###二维数组dp的左上角的值需要提前确定好
        for i in range(1,rows):
            dp[i][0]=dp[i-1][0]+grid[i][0]
        for j in range(1,cols):
            dp[0][j]=dp[0][j-1]+grid[0][j]
        for i in range(1,rows):
            fow j in range(1,cols):
                dp[i][j]=min(dp[i-1][j],dp[i][j-1])+grid[i][j]
        return dp[rows-1][cols-1]
###该题中，原矩阵每个位置上有数字，最后输出的结果需要位置上的数字相加，最后输出的是一个数值，一个和
###62题，每个位置上没有数字，过一个位置+1，最后输出的是长度或者个数