为了不在赎金信中暴露字迹，从杂志上搜索各个需要的字母，组成单词来表达意思。

给你一个赎金信 (ransomNote) 字符串和一个杂志(magazine)字符串，判断 ransomNote 能不能由 magazines 里面的字符构成。

如果可以构成，返回 true ；否则返回 false 。

magazine 中的每个字符只能在 ransomNote 中使用一次。

示例 2：

输入：ransomNote = "aa", magazine = "ab"
输出：false
示例 3：

输入：ransomNote = "aa", magazine = "aab"
输出：true

############哈希表 统计数组里出现的个数：collections.Counter()


class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
    ####利用哈希表记录字符串里每个字符出现的个数
        notecount=collections.Counter(ransomNote)
        magacount=collectinos.Counter(magazine)

        for note in notecount:
            if magazine[note]<notecount[note]:
                 return False ##先判定返回false的条件，因为return false比return true的条件要简单一些
        return True       ##for循环结束后说明符合条件，返回true
