394.字符串解码
给定一个经过编码的字符串，返回它解码后的字符串。

编码规则为: k[encoded_string]，表示其中方括号内部的 encoded_string 正好重复 k 次。注意 k 保证为正整数。

你可以认为输入字符串总是有效的；输入字符串中没有额外的空格，且输入的方括号总是符合格式要求的。

此外，你可以认为原始数据不包含数字，所有的数字只表示重复的次数 k ，例如不会出现像 3a 或 2[4] 的输入。


输入：s = "3[a]2[bc]"
输出："aaabcbc"

输入：s = "3[a2[c]]"
输出："accaccacc"

从中括号开始判定，借助栈，碰到[，进栈，记录multi，到]，也就该出栈了，注意现在的res和刚出栈的过去的last_res以及curr_multi的关系，res=last_res+curr_multi*res

class Solution:
    def decodeString(self, s: str) -> str:
        stack,res,multi=[],"",0
        for c in s:
            if c=='[':
               stack.append((res,multi))
               res,multi="",0
            elif c==']':
               last_res,curr_multi=stack.pop((res,multi))
               res=last_res+res*curr_multi
            elif '0'<=c<='9':
               multi=multi*10+int(c)##这一步不太懂
            else:
               res += c#若是字母，添加到res尾部
        return res