剑指offer59｜滑动窗口的最大值

给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。

示例:

输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3
输出: [3,3,5,5,6,7] 
解释: 

  滑动窗口的位置                最大值
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        if not nums or k==0:
             return []
        deque=collections.deque()
        #形成窗口前
        for i in range(k):
            while deque and deque[-1]<nums[i]:##这里多想一下
                deque.pop()
            deque.append(nums[i])
            res=[deque[0]]
        ##形成窗口后
        for i in range(k,len(nums)):
        ###保证窗口长度不变，需删除最左边的元素
            if deque[0]==nums[i-k]:
                 deque.popleft()
            while deque and deque[-1]<nums[i]:##为了保证deque里是非严格的递减序列，所以比当前队列末尾值deque[-1]小的直接添加到队列，大于队列末尾值的，需要先把队列deque清空，才能再添加到队列
                deque.pop()
            deque.append(nums[i])
            res.append(deque[0])
        return res
