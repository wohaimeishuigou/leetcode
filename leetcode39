39.组合总和

给定一个无重复元素的正整数数组 candidates 和一个正整数 target ，找出 candidates 中所有可以使数字和为目标数 target 的唯一组合。

candidates 中的数字可以无限制重复被选取。如果至少一个所选数字数量不同，则两种组合是唯一的。 

对于给定的输入，保证和为 target 的唯一组合数少于 150 个。

class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        dfs(candidates,begin,size,path,res,target):
            if target<0:
               return[]
            if target==0:
               res.append(path)
            for index in range(begin,size):
               dfs(candidates,index,size,path+[candidates[index],res,target-candidates[index]])
        
        size=len(candidates)
        if size==0: 
           return []
        res=[]
        path=[]
        dfs(candidates,0,size,path,res,target)
        return res

###以 target = 7 为 根结点 ，创建一个分支的时 做减法 ；
每一个箭头表示：从父亲结点的数值减去边上的数值，得到孩子结点的数值。边的值就是题目中给出的 candidate 数组的每个元素的值；
减到 00 或者负数的时候停止，即：结点 00 和负数结点成为叶子结点；
所有从根结点到结点 00 的路径（只能从上往下，没有回路）就是题目要找的一个结果。

