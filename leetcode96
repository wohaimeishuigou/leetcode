96.不同的二叉搜索树
给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。

给定一个1,2,3,...,n的有序序列，为了构建出一颗二叉搜索树，我们可以遍历序列中每个数字，遍历到数字i时，将数字i作为二叉树的根，
将(1,2,...,i-1)作为二叉树的左子树，(i+1,...,n)作为二叉树的右子树
由此可见，原问题可以分成两个规模较小的子问题，所以可以考虑动态规划做

G(n)是长度为n的序列能构成的不同二叉搜索树的个数
F(i,n)是根节点为i，序列长度为n的不同二叉搜索树的个数

class Solution:
    def numTrees(self, n: int) -> int:
        G=[0]*(n+1)
        G[0],G[1]=1,1
        for i in range(2,n+1):
            for j in range(1,n+1):
                G[i] += G[j-1]*G[i-j]
        return G[n]

F(i,n)=G(i−1)⋅G(n−i)


     i=1
G(n)= ∑ G(i−1)⋅G(n−i)
      n
​
