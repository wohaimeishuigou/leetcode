乘积最大子数组
给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。

class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        n=len(nums)
        dp=maxdp=mindp=nums[0]
        for i in range(1,n):
            maxdp,mindp=max(maxdp*nums[i],nums[i],mindp*nums[i]),min(maxdp*nums[i],nums[i],mindp*nums[i])
            dp=max(dp,maxdp)
        return dp

用动态规划，可是要注意的是，这道题中，下一个位置的最优解未必是从上一个位置的最优解转移而来
##对于乘法，如果最大值乘以一个负数，则他成为最小值
所以要维护两个变量，一个maxdp，一个mindp