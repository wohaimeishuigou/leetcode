128.最长连续序列
给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。

请你设计并实现时间复杂度为 O(n) 的算法解决此问题。

####if判断语句是为了找连续序列的第一个数
####找到连续序列的第一个数字时，才会进入到内层循环
###只有当一个数是连续序列的第一个数时，才会进入到内层循环


class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        longsize=0
        nums_set=set(nums)
        for num in nums_set:
            if num-1 not in nums_set:
               current_num=num
               currentsize=1
            while current_num+1 in nums_set:
               current_num += 1
               currentsize += 1
            longsize=max(currentsize,longsize)
        return longsize